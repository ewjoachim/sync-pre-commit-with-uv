name: CI

on:
  pull_request:
  push:
    branches:
      - "main"
    tags:
      - "*"

jobs:
  tests:
    strategy:
      matrix:
        python-version:
          - "3.9"
          - "3.10"
          - "3.11"
          - "3.12"
          - "3.13"

    name: "py${{ matrix.python-version }}"
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5

      - uses: astral-sh/setup-uv@2ddd2b9cb38ad8efd50337e8ab201519a34c9f24 # v7
        with:
          python-version: "${{ matrix.python-version }}"

      - name: Run tests
        run: uv run pytest
        env:
          COVERAGE_FILE: ".coverage.${{ matrix.python-version }}"

      - name: Store coverage file
        uses: actions/upload-artifact@v5
        with:
          name: coverage-${{ matrix.python-version }}
          path: .coverage.${{ matrix.python-version }}
          include-hidden-files: true

  static-typing:
    name: Run Pyright
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5

      - uses: astral-sh/setup-uv@2ddd2b9cb38ad8efd50337e8ab201519a34c9f24 # v7
        with:
          activate-environment: true

      - name: Install dependencies
        run: uv sync --all-extras

      - uses: jakebailey/pyright-action@v2
        with:
          version: PATH

  self-check:
    name: Run sync-pre-commit-with-uv on the repo itself
    runs-on: ubuntu-latest
    permissions:
      contents: write
    env:
      REF: "${{ github.head_ref || 'main' }}"
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5
        with:
          ref: ${{ env.REF }}
          persist-credentials: false

      - uses: astral-sh/setup-uv@2ddd2b9cb38ad8efd50337e8ab201519a34c9f24 # v7

      - name: Run sync-pre-commit-with-uv, commit changes if any
        run: |
          set -eux
          uvx pre-commit try-repo . --all-files --show-diff-on-failure || exit_code=$?

          if ! git diff --exit-code; then
            if [ "${IS_FORK}" = "true" ]; then
              echo "::warning::Changes detected, but this is a fork. Skipping commit and push."
              echo "::warning::Please run 'uvx pre-commit try-repo .' locally and commit the changes manually."

            else
              echo "::notice::Changes detected, committing and pushing changes"
              git config user.name "Joachim Jablon (PAT)"
              git config user.email "ewjoachim@gmail.com"
              git add .
              git commit -m "Sync pre-commit with uv.lock"
              git remote set-url origin "https://${PAT}@github.com/${GITHUB_REPOSITORY}.git"
              git push
            fi
            exit 1
          fi

        env:
          PAT: ${{ secrets.PAT }}
          IS_FORK: ${{ github.event_name == 'pull_request' && github.repository != github.event.pull_request.head.repo.full_name }}

  coverage:
    name: Coverage
    runs-on: ubuntu-latest
    needs: [tests]
    permissions:
      pull-requests: write
      contents: write
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5

      - uses: actions/download-artifact@v6
        with:
          pattern: coverage-*
          merge-multiple: true

      - name: Display coverage
        uses: ewjoachim/python-coverage-comment-action@v3
        with:
          MERGE_COVERAGE_FILES: true
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          MINIMUM_GREEN: 95

      - name: Store Pull Request comment to be posted
        uses: actions/upload-artifact@v5
        with:
          name: python-coverage-comment-action
          path: python-coverage-comment-action.txt
